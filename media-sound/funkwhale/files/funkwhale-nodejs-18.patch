--- orig/funkwhale-1.2.7/front/package.json	2022-07-14 10:53:53.000000000 +0000
+++ funkwhale-1.2.7/front/package.json	2022-07-30 03:12:47.999069042 +0000
@@ -45,10 +45,10 @@
   },
   "devDependencies": {
     "@babel/eslint-parser": "~7.13.14",
-    "@vue/cli-plugin-babel": "~4.2.2",
-    "@vue/cli-plugin-pwa": "~4.2.2",
-    "@vue/cli-plugin-unit-mocha": "~4.2.2",
-    "@vue/cli-service": "~4.2.2",
+    "@vue/cli-plugin-babel": "~5",
+    "@vue/cli-plugin-pwa": "~5",
+    "@vue/cli-plugin-unit-mocha": "~5",
+    "@vue/cli-service": "~5",
     "@vue/test-utils": "~1.0.0-beta.20",
     "chai": "~4.1.2",
     "easygettext": "~2.6.3",
--- orig/funkwhale-1.2.7/front/vue.config.js	2022-07-14 10:53:53.000000000 +0000
+++ funkwhale-1.2.7/front/vue.config.js	2022-07-30 01:06:34.993875508 +0000
@@ -5,7 +5,7 @@
 const PreloadWebpackPlugin = require('preload-webpack-plugin');
 let plugins = [
   // do not include moment.js locales since it's quite heavy
-  new webpack.IgnorePlugin(/^\.\/locale$/, /moment$/),
+  new webpack.IgnorePlugin({resourceRegExp: /^\.\/locale$/, contextRegExp: /moment$/}),
   new PreloadWebpackPlugin({
     rel: 'preload',
     include: ['audio', 'core', 'about']
@@ -60,10 +60,9 @@
       ]
     },
     workboxOptions: {
-      importWorkboxFrom: 'local',
       // swSrc is required in InjectManifest mode.
-      swSrc: 'src/service-worker.js',
-      swDest: 'service-worker.js',
+      swSrc: './src/service-worker.js',
+      swDest: './service-worker.js',
       exclude: [
         new RegExp('js/locale.*'),
         new RegExp('js/moment-locale.*'),
--- orig/funkwhale-1.2.7/front/src/service-worker.js	2022-07-14 10:53:53.000000000 +0000
+++ funkwhale-1.2.7/front/src/service-worker.js	2022-07-29 21:29:18.492678622 +0000
@@ -2,9 +2,11 @@
 
 // This is the code piece that GenerateSW mode can't provide for us.
 // This code listens for the user's confirmation to update the app.
-workbox.loadModule('workbox-routing')
-workbox.loadModule('workbox-strategies')
-workbox.loadModule('workbox-expiration')
+import { clientsClaim } from 'workbox-core';
+import { RegExpRoute, Route, Router } from 'workbox-routing';
+import { NetworkFirst } from 'workbox-strategies';
+import { ExpirationPlugin } from 'workbox-expiration';
+import { precacheAndRoute } from 'workbox-precaching';
 
 self.addEventListener('message', (e) => {
   if (!e.data) {
@@ -23,9 +25,9 @@
       break
   }
 })
-workbox.core.clientsClaim()
+clientsClaim()
 
-const router = new workbox.routing.Router()
+const router = new Router()
 router.addCacheListener()
 router.addFetchListener()
 
@@ -48,17 +50,17 @@
   const networkFirstExcludedPaths = [
     'api/v1/listen'
   ]
-  const strategy = new workbox.strategies.NetworkFirst({
+  const strategy = new NetworkFirst({
     cacheName: 'api-cache:' + serverUrl,
     plugins: [
-      new workbox.expiration.Plugin({
+      new ExpirationPlugin({
         maxAgeSeconds: 24 * 60 * 60 * 7
       })
     ]
   })
   const networkFirstRoutes = networkFirstPaths.map((path) => {
     const regex = new RegExp(regexReadyServerUrl + path)
-    return new workbox.routing.RegExpRoute(regex, () => {})
+    return new RegExpRoute(regex, () => {})
   })
   const matcher = ({ url, event }) => {
     for (let index = 0; index < networkFirstExcludedPaths.length; index++) {
@@ -80,7 +82,7 @@
     return false
   }
 
-  const route = new workbox.routing.Route(matcher, strategy)
+  const route = new Route(matcher, strategy)
   console.log('[sw] registering new API route...', route)
   router.registerRoute(route)
   registeredServerRoutes.push(route)
@@ -89,5 +91,5 @@
 // The precaching code provided by Workbox.
 self.__precacheManifest = [].concat(self.__precacheManifest || [])
 
-// workbox.precaching.suppressWarnings(); // Only used with Vue CLI 3 and Workbox v3.
-workbox.precaching.precacheAndRoute(self.__precacheManifest, {})
+// suppressWarnings(); // Only used with Vue CLI 3 and Workbox v3.
+precacheAndRoute(self.__WB_MANIFEST, {})
